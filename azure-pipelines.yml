# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- '*'

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  dotnetSdkVersion: '6.x'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

#- task: VSBuild@1
#  inputs:
#    solution: '$(solution)'
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'
#comment

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration $(buildConfiguration)'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Run unit tests - $(buildConfiguration)'
  inputs:
    command: 'test'
    arguments: '--no-build --configuration $(buildConfiguration)'
    publishTestResults: true
    projects: '**/*.Test.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Publish the project - $(buildConfiguration)'
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)' 
    condition: succeeded()

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**/bin/**' 
    TargetFolder: '$(build.artifactstagingdirectory)'
    condition: succeededOrFailed()

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'AzureCalculatorManager'
    WebappName: 'calculator-app'
    package: '$(System.DefaultWorkingDirectory)/**/*.zip'
    

#- task: CopyFiles@2
#  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
#  inputs:
#    SourceFolder: '$(Build.SourcesDirectory)'
#    Contents: |
#      **/*
#      !.git/**/*
#    TargetFolder: '$(Build.ArtifactStagingDirectory)'


#  variables:
#  buildConfiguration: 'Release'

#steps:
#- script: dotnet build --configuration $(buildConfiguration)
#  displayName: 'dotnet build $(buildConfiguration)'
#- task: DotNetCoreCLI@2
#  inputs:
#    command: 'publish'
#    publishWebProjects: true
#- task: AzureWebApp@1
#  inputs:
#    azureSubscription: '<Azure service connection>'
#    appType: 'webAppLinux'
#    appName: '<Name of web app>'
#    package: '$(System.DefaultWorkingDirectory)/**/*.zip'
    